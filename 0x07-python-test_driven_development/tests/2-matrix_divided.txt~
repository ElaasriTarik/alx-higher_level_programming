# 2-matrix_devided.txt

``This module defines a function that devides elements of a matrix ``matrix_devided(matrix, div)``.

usage:


>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::

>>> matrix = [
...     [3, 6, 9],
...     [12, 15, 18]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

::

>>> matrix = [
...     [1.1, -2.2, 3.3],
...     [4.4, 5.5, -6.6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

::

>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

::

>>> matrix = "matrix"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

::

>>> matrix = [[]]
>>> print(matrix_divided(matrix, 3))
[[]]

::

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 1)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

::

>>> matrix_divided([[1, 2, "b"], [4, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

::

>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

::

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

::

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "x")
Traceback (most recent call last):
...
TypeError: div must be a number

::

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], [1, 2, 3])
Traceback (most recent call last):
...
TypeError: div must be a number

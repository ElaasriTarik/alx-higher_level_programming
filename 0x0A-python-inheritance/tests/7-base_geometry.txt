- Usage

>>> bg = __import__("7-base_geometry").BaseGeometry

>>> m = __import__("7-base_geometry").__doc__
>>> len(m) > 1
True

>>> c = __import__("7-base_geometry").BaseGeometry.__doc__
>>> len(c) > 1
True

>>> mod1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
>>> len(mod1) > 1
True
>>> mod2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
>>> len(mod2) > 1
True

>>> b = bg()
>>> b.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> b.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> b.integer_validator("ints", 1, 2)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> b.integer_validator("intr")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'


>>> b.integer_validator("integer", 1)

>>> b.integer_validator("boolean", True)
Traceback (most recent call last):
...
TypeError: bool must be an integer
>>> b.integer_validator("float", 4.5)
Traceback (most recent call last):
...
TypeError: float must be an integer

>>> b.integer_validator("float", "float")
Traceback (most recent call last):
...
TypeError: float must be an integer

TypeError: string must be an integer

>>> b.integer_validator("tuple", (3, 2))
Traceback (most recent call last):
...
TypeError: tuple must be an integer
>>> b.integer_validator("list", [4, 4, 2])
Traceback (most recent call last):
...
TypeError: list must be an integer

>>> b.integer_validator("list", {"a": "b"})
Traceback (most recent call last):
...
TypeError: list must be an integer

>>> b.area(1)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given

>>> b.area(2)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 3 were given

>>> b.integer_validator("integer", 0)
Traceback (most recent call last):
...
ValueError: integer must be greater than 0

>>> b.integer_validator("integer", -1)
Traceback (most recent call last):
...
ValueError: integer must be greater than 0
